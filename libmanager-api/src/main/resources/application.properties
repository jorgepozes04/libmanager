spring.datasource.url=jdbc:mysql://localhost:3306/libmanager_db?createDatabaseIfNotExist=true&serverTimezone=UTC

spring.datasource.username=root

spring.datasource.password=root

# ===================================================================
# CONFIGURAÇÃO DO JPA (Java Persistence API) E HIBERNATE
# ===================================================================
# Define a estratégia de geração do schema.
# 'validate': Apenas valida se as tabelas do banco correspondem às suas entidades.
# 'update': Tenta atualizar o banco para corresponder às entidades (bom para dev).
# 'create': Apaga e cria tudo do zero a cada inicialização (bom para testes).
# 'none': Não faz nada (usado em produção).
# Vamos usar 'validate' pois já criamos o DDL manualmente.
spring.jpa.hibernate.ddl-auto=validate

# Mostra no console o SQL que o Hibernate está executando por baixo dos panos.
# Muito útil para debugar!
spring.jpa.show-sql=true

# Formata o SQL mostrado no console para ficar mais legível.
spring.jpa.properties.hibernate.format_sql=true

# Chave secreta para assinatura dos tokens JWT (em um projeto real, use uma variável de ambiente)
api.security.token.secret=minha-chave-secreta-super-segura-libmanager